(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{289:function(t,s,a){"use strict";a.r(s);var n=a(17),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据"}},[t._v("#")]),t._v(" 数据")]),t._v(" "),s("p",[t._v("数据管理使用详情，参考"),s("a",{attrs:{href:"https://umijs.org/docs/max/data-flow",target:"_blank",rel:"noopener noreferrer"}},[t._v("max-model"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("核心思路就是利用 "),s("code",[t._v("hooks")]),t._v(" 优秀的表达能力和简洁性来做 model，是有别于 "),s("code",[t._v("redux")]),t._v(" 的另一种数据管理手段。唯一需要处理的就是 "),s("code",[t._v("hooks")]),t._v(" 只能复用逻辑，不能复用状态的问题。还好这个已经在 "),s("code",[t._v("max-model")]),t._v(" 里解决了。")]),t._v(" "),s("blockquote",[s("p",[t._v("有兴趣了解 "),s("code",[t._v("max-model")]),t._v(" 如何解决状态复用问题的，可以参考"),s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/89518937",target:"_blank",rel:"noopener noreferrer"}},[t._v("从 custom Hooks 到 shared Hooks ：hox 原理分析"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("基于 "),s("code",[t._v("max-model")]),t._v("，所有的 model 都会放在 "),s("code",[t._v("src/models/")]),t._v(" 下面。")]),t._v(" "),s("p",[t._v("我们以用户管理页面为例讲解。")]),t._v(" "),s("p",[s("code",[t._v("src/pages/admin/contacts/index.tsx")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Contacts"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("FC")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 业务逻辑被提取到了 src/models/contacts.ts 中")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需要哪个状态 或者 方法，pick 即可。pick不是必须的，也可引入所有内容，")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只不过那样可能会引起不必要的更新")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" contacts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" loadingSearchContacts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" doSearchContacts "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useModel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'contacts'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'contacts'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'loadingSearchContacts'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'doSearchContacts'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 省略多行代码")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" columns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" Contacts\n")])])]),s("p",[t._v("至于这种新的风格，基于 "),s("code",[t._v("hooks")]),t._v(" 的 model 如何编写？ 那真的简单的一批，就是纯纯的 自定义 "),s("code",[t._v("hooks")]),t._v("。")]),t._v(" "),s("p",[t._v("打开 "),s("code",[t._v("src/models/contacts.ts")]),t._v(" 看看就知道了")])])}),[],!1,null,null,null);s.default=e.exports}}]);